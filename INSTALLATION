/*****************************************************************
 *                        PINOCCHIO  V5.1                        *
 *  (PINpointing Orbit-Crossing Collapsed HIerarchical Objects)  *
 *****************************************************************
# This code was written by
# Pierluigi Monaco, Tom Theuns, Giuliano Taffoni, Marius Lepinzan, 
# Chiara Moretti, Luca Tornatore, David Goz, Tiago Castro
# Copyright (C) 2025
# 
# github: https://github.com/pigimonaco/Pinocchio
# web page: http://adlibitum.oats.inaf.it/monaco/pinocchio.html
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA



********************************************************************

        INSTALLATION AND USAGE GUIDE FOR PINOCCHIO 5.1

********************************************************************


Pinocchio is a fully parallel hybrid MPI + OpenMP code. This guide 
provides step-by-step instructions to install, compile, and run the code.


REQUIREMENTS

Before installing Pinocchio, ensure you have the following
dependencies installed: 

- Message Passing Interface (MPI) libraries
- FFTW3 libraries with MPI support (http://www.fftw.org/)
- GNU Scientific Library (GSL) (http://www.gnu.org/software/gsl/)
- PFFT (Parallel FFT Library) (https://github.com/mpip/pfft)

Ensure these libraries are installed and available in your environment

INSTALLATION

- Option 1: Clone from GitHub

1. prompt> git clone https://github.com/pigimonaco/Pinocchio.git

- Option 2: Download and Extract the Tarball

1.  prompt> tar xvzf pinocchio-5.1.tar.gz

    or (if you don't have gnu tar)

    prompt> gunzip pinocchio-5.1.tar.gz ; tar xvf pinocchio-5.1.tar

NEXT STEPS

Once you have the code, follow these steps:

2.  Navigate to the source directory Pinocchio-5.1/src/

    prompt> cd Pinocchio-5.1/src/

3.  Edit the Makefile and set the values of compilation flags and
    variables to those suitable for your system. You find an example
    valid for a generic linux machine, using the gnu C compiler.

5.  Make the executable by typing

    prompt> make

    If the code does not compile, check carefully the Makefile and ask
    support to your local system manager. If everything fails, email
    all the details to monaco@oats.inaf.it.

5.  A utility, called memorytest, has been written to help design a run.
    Compile it with:

    prompt> make memorytest

    Instruction on how to use it are given in the DOCUMENTATION file.

Use the script ReadPinocchio5.py (located in the scripts directory) 
for reading the binary output of the code.


RUN THE CODE

The executable is found in the src/ directory after compilation, and
is pinocchio.x (file name specified by the EXEC variable in the
Makefile). In the example/ directory you find a small working example
of a 500 Mpc/h box sampled with 200^3 particles, run with 5 MPI tasks.
It requires ~2Gb of RAM. The code has been compiled with TWO_LPT,
THREE_LPT and PLC options, as in the provided Makefile.

Open a new directory my.example/ and copy there the three files
parameter_file, outputs and PlotExample.py that can be found in the
example/ directory. The parameter file contains all needed parameters
with a quick comment, read the DOCUMENTATION for more details. The
file outputs contains a list of redshifts at which output is required.

chdir to my.directory and run the code:

> mpirun -np 5 ../src/pinocchio.x parameter_file > log

The code will generate four catalogs and four mass function files, a
past-light cone file and a cosmology file that contains basic
cosmological quantities. These files, including the log file, should
be nearly identical to the ones provided in the example/ directory.  A
quick check can be performed with the PlotExample.py python script
contained in the example/ directory.

prompt> ipython

In [1]: %run PlotExample.py

The script will produce three plots, mf.png with the mass function at
z=0, lss.png with a slice of the box and plc.png, with a 3D
visualization of the past-light cone in comoving coordinates; rotation
can be adjusted in the panel produced by python.

